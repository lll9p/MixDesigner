import unittest
import numpy as np

from models import SimplexCentroid
y = [41.8, 51.8, 49.8, 47.7, 53.2, 46.6, 45.3, 43.3, 47.0, 50.7, 48.2, 51.8, 47.4, 51.9, 50.0,
     46.3, 45.0, 48.6, 45.3, 47.6, 46.4, 48.8, 51.6, 50.0, 48.9, 45.0, 48.2, 46.8, 46.6, 50.3, 48.6]
X = [[0.86666667, 0., 0.06666667, 0.06666667, 0.],
     [0.66666667, 0., 0.26666667, 0.06666667, 0.],
     [0.66666667, 0., 0.06666667, 0.26666667, 0.],
     [0.832, 0.052, 0.058, 0.058, 0.],
     [0.658, 0.052, 0.232, 0.058, 0.],
     [0.658, 0.052, 0.058, 0.232, 0.],
     [0.716, 0.052, 0.116, 0.116, 0.],
     [0.86666667, 0., 0.06666667, 0., 0.06666667],
     [0.66666667, 0., 0.26666667, 0., 0.06666667],
     [0.66666667, 0., 0.06666667, 0., 0.26666667]]
lower_bounds = [0.6, 0, 0, 0, 0]
point = 5
response_surface_coef = [41.8, 51.8, 49.8, 47.7, 53.2, -0.799999999999983, -2.0, -5.800000000000011, -2.0, -0.39999999999997726, -6.199999999999989, -2.8000000000000114, -5.400000000000006, 1.5999999999999943, -1.8000000000000114, -30.90000000000009, -18.300000000000182,
                         7.7999999999999545, 9.0, -10.799999999999955, -2.7000000000000455, 9.899999999999636, 4.7999999999999545, 8.099999999999909, -19.200000000000045, -259.60000000000036, -24.400000000001455, -136.39999999999964, -49.19999999999891, 142.39999999999964, 5081.0]
prediction = [43.26666671, 47.30000004, 45.93333338, 43.34862109,
              47.10770404, 45.72984589, 44.70865413, 44.43333338,
              48.73333338, 50.43333338]


class TestSimplexCentroid(unittest.TestCase):

    def test_fit(self):
        model = SimplexCentroid(point, lower_bounds)
        with self.assertRaises(TypeError):
            model.fit(y[:-2])
        model.fit(y)
        self.assertEqual((np.array(model._response_surface_coef) -
                          np.array(response_surface_coef)).sum(), 0.0)

    def test_predict(self):
        model = SimplexCentroid(point, lower_bounds)
        model.fit(y)
        with self.assertRaises(TypeError):
            model.predict([1, 2, 3, 5])
        self.assertAlmostEqual((model.predict(X) -
                                np.array(prediction)).sum(), 0.0, delta=1e-5)

if __name__ == '__main__':
    unittest.main()
